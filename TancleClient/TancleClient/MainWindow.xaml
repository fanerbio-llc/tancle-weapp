<Window x:Class="TancleClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TancleClient"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:vm="clr-namespace:TancleClient.ViewModel"
        xmlns:l="clr-namespace:TancleClient.TranslationByMarkupExtension"
        Title="{l:Translate View_Application_Title}" Width="1024" Height="768"
        WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resource/MenuDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="FontSize" Value="12pt" />
            </Style>

            <DataTemplate x:Key="MenuButton" DataType="{x:Type vm:MenuViewModelBase}" >
                <Button Command="Cut" ToolBar.OverflowMode="Never" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <StackPanel Orientation="Vertical">
                        <Canvas x:Name="menu_icon" Width="60" Height="60" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                            <Path Width="40" Height="40" Canvas.Left="10" Canvas.Top="16" Stretch="Fill" Fill="#FF000000" 
                                  Data="{Binding Icon}" />
                        </Canvas>
                        <TextBlock x:Name="menu_text" HorizontalAlignment="Center" Text="{Binding Title}"/>
                    </StackPanel>
                </Button>
            </DataTemplate>
        </Grid.Resources>

        <Grid.DataContext>
            <Binding Source="{StaticResource Locator}"/>
        </Grid.DataContext>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <DockPanel Grid.Row="0">
            <ListBox x:Name="ConfigListBox" BorderThickness="0"
                         ItemsSource="{Binding Main.ViewsOfConfig, Source={StaticResource Locator}}" 
                         ItemTemplate="{DynamicResource MenuButton}"  
                         IsSynchronizedWithCurrentItem="False" 
                         SelectedValue="{Binding Main.SelectView, Source={StaticResource Locator}}" >
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightBlue"/>
                </ListBox.Resources>
                <!--Chage Property of IsSynchronizedWithCurrentItem to True which ListBox will select first item as default-->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Main.ViewSelectedChangeCommand}"
                                                   CommandParameter="{Binding ElementName=ConfigListBox, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
            
            <!--<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

            <ListBox x:Name="RunningListBox" BorderThickness="0"
                         ItemsSource="{Binding Main.ViewsOfRunning, Source={StaticResource Locator}}" 
                         ItemTemplate="{DynamicResource MenuButton}"  
                         IsSynchronizedWithCurrentItem="False" 
                         SelectedValue="{Binding Main.SelectView, Source={StaticResource Locator}}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightBlue"/>
                </ListBox.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Main.ViewSelectedChangeCommand}"
                            CommandParameter="{Binding ElementName=RunningListBox, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>-->
        </DockPanel>

        <Grid Grid.Row="1" Background="sc#1.000000, 0.769689, 0.831936, 1.000000" x:Name="DocumentRoot">
            <Rectangle Fill="white" RadiusX="14" RadiusY="14" Margin="2" Stroke="sc#1.000000, 0.250141, 0.333404, 0.884413" StrokeDashArray="2"/>
            <DockPanel LastChildFill="True" Margin="10">
                <Grid  Width="Auto">
                    <Rectangle Fill="sc#1.000000, 0.769689, 0.831936, 1.000000" RadiusX="10" RadiusY="10" Stroke="sc#1.000000, 0.250141, 0.333404, 0.884413" StrokeDashArray="2" />
                    <DockPanel x:Name="Details" Margin="7" LastChildFill="True" >
                        <ContentControl Content="{Binding Main.SelectView}"
                                    Visibility="{Binding Main.SelectView, Converter={StaticResource N2BCvtr}}" >
                        </ContentControl>
                    </DockPanel>
                </Grid>
            </DockPanel>
        </Grid>
    </Grid>
</Window>
